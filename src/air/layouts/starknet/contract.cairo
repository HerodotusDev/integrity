use integrity::air::layouts::starknet::global_values::GlobalValues;

#[starknet::interface]
trait ILayoutCompositionContract<ContractState> {
    fn eval_composition_polynomial_inner(
        self: @ContractState,
        mask_values: Span<felt252>,
        constraint_coefficients: Span<felt252>,
        point: felt252,
        trace_generator: felt252,
        global_values: GlobalValues
    ) -> felt252;
}

#[starknet::contract]
mod LayoutCompositionContract {
    use super::ILayoutCompositionContract;
    use integrity::air::layouts::starknet::{
        global_values::GlobalValues, autogenerated::eval_composition_polynomial_inner,
    };

    #[storage]
    struct Storage {}

    #[abi(embed_v0)]
    impl LayoutCompositionContract of ILayoutCompositionContract<ContractState> {
        fn eval_composition_polynomial_inner(
            self: @ContractState,
            mask_values: Span<felt252>,
            constraint_coefficients: Span<felt252>,
            point: felt252,
            trace_generator: felt252,
            global_values: GlobalValues
        ) -> felt252 {
            eval_composition_polynomial_inner(
                mask_values, constraint_coefficients, point, trace_generator, global_values
            )
        }
    }
}
